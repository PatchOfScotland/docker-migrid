# Custom MiG network daemon filter to detect attempts to brute-force guess user passwords 
# and common scanning bots

[DEFAULT]


normal = ^.* ERROR Failed (password|password hash|digest) login for .* from <HOST>$

# Login attempts with system account usernames are a cracking giveway
pw_crack = ^.* ERROR Failed (password|password hash|digest) login for (root|bin|daemon|adm|admin|administrator|superadmin|lp|operator|controller|ftp|irc|nobody|sys|pi|guest|www|www-data|mysql|postgres|oracle|mongodb|sybase|redis|hadoop|zimbra|cpanel|plesk|openhabian|tomcat|exim|postfix|sendmail|mailnull|postmaster|mail|uucp|news|teamspeak|git|svn|cvs|user|ftpuser|ubuntu|ubnt|supervisor|csgoserver|device|laboratory|deploy|support|info|test[0-9]*|user[0-9]*|[0-9]+|root;[a-z0-9]+) from <HOST>$

# Repeated native sftp handshake errors from weak client security indicate a scan bot
handshake = ^.* WARNING client negotiation errors for \('<HOST>', [0-9]+\): (Incompatible ssh (peer|server) \(no acceptable (kex algorithm|ciphers|macs|host key)\))?$

[INCLUDES]
before = common.conf

[Definition]
failregex = %(normal)s
#ignoreregex =

[Init]
maxlines = 1
# Use pyinotify or poll on native log file rather than systemd journal
#journalmatch = _SYSTEMD_UNIT=migrid.service + _COMM=grid_webdavs.py
journalmatch = 
