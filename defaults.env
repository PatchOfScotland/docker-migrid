# IMPORTANT: this is a sample env file with the setup used for the default simple
#            docker build. To adjust the build settings you can copy it to ./.env and
#            make your desired changes before running
#            make init && make build

# The build type specifies the version of MiGrid that should be build
# Fow now, the following types are supported.
# {basic,advanced}
BUILD_TYPE=basic

# Which target system is the image being generated for
# {development, production}
BUILD_TARGET=development

# The domain in which the migrid should be accessible
DOMAIN=migrid.test

# Which site setup flavor to emulate regarding skin, etc.
# {migrid, idmc, erda, sif}
EMULATE_FLAVOR=migrid
# and the corresponding FQDN used e.g. in that flavor index-FQDN.html
EMULATE_FQDN=migrid.org

# Which svn repo and version of migrid should be used
MIG_SVN_REPO=https://svn.code.sf.net/p/migrid/code/trunk
MIG_SVN_REV=5349

# Which git repo and version of migrid should be used
MIG_GIT_REPO=https://github.com/ucphhpc/migrid-sync.git
MIG_GIT_BRANCH=edge
MIG_GIT_REV=bb229b3f12dc3dd15090c08c4255bad5a955d447
#MIG_GIT_BRANCH=experimental
#MIG_GIT_REV=3b0fb24d449cd0678e0c0cf2712ad098d3bdbb47

# Run migrid IO daemons from a single shared container
COMPOSE_PROFILES=single

# Toggle experimental Python3 support
WITH_PY3=no

# Toggle experimental git support
WITH_GIT=no

# Which timezone should the service use
TZ=Europe/Copenhagen

# The URL of the of designated jupyter services
# The url is prefixed by the name of the service itself
JUPYTER_SERVICES="dag.http://dag.test"

# The path to the html file that describes the service
JUPYTER_SERVICES_DESC="{'dag': '/home/mig/state/wwwpublic/dag_desc.html'}"

# Jupyterhub variables
# Required when the 'auth_state' flag is enabled
# means that the 'hub/setup_jup_crypt_secrets.sh script
# must be sourced before the stack is deployed
# https://jupyterhub.readthedocs.io/en/stable/reference/authenticators.html
JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}

# https://jupyterhub.readthedocs.io/en/stable/getting-started/security-basics.html#generating-and-storing-as-an-environment-variable
# Used by the proxy and JupyterHub for authentication
CONFIGPROXY_AUTH_TOKEN=${CONFIGPROXY_AUTH_TOKEN}
