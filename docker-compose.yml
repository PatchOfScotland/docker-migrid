version: '3.7'

services:
  devdns:
    image: ruudud/devdns
    container_name: devdns
    ports: ["53:53/udp"]
    networks:
      - default
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: Europe/Copenhagen

  migrid:
    image: nielsbohr/migrid:edge
    container_name: migrid
    environment:
      TZ: Europe/Copenhagen
    depends_on:
      - devdns
    networks:
      default:
        aliases:
          - io.migrid.test
          - www.migrid.test
          - oid.migrid.test
          - sid.migrid.test
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
    env_file:
      - migrid-httpd.env
    command: /app/docker-entry.sh -u dev@dev.dk -p Passw0rd123

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    depends_on:
      - migrid
      - dag
    networks:
      - default
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - ./nginx-proxy/migrid.conf:/etc/nginx/conf.d/migrid.conf:ro
    - ./nginx-proxy/dag.conf:/etc/nginx/conf.d/dag.conf:ro
    - ./nginx-proxy/modi.conf:/etc/nginx/conf.d/modi.conf:ro
    - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/oid.migrid.test.crt:ro
    - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/sid.migrid.test.crt:ro
    - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/oid.migrid.test.key:ro
    - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/sid.migrid.test.key:ro

  dag:
    image: nielsbohr/jupyterhub:latest
    container_name: dag
    depends_on:
      - devdns
    networks:
      - jupyter
    environment:
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
    volumes:
      - ./jupyterhub_config/jupyterhub_dag_config.py:/srv/jupyterhub/jupyter_config.py:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command: jupyterhub -f /srv/jupyterhub/jupyter_config.py
  
  modi:
    image: nielsbohr/jupyterhub:latest
    container_name: modi
    depends_on:
      - devdns
    networks:
      - jupyter
    environment:
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
    volumes:
      - ./jupyterhub_config/jupyterhub_modi_config.py:/srv/jupyterhub/jupyter_config.py:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command: jupyterhub -f /srv/jupyterhub/jupyter_config.py

networks:
  default:
  jupyter:
    driver: overlay


volumes:
  certs:
    driver_opts:
      # Volume for generated certificates (provided by migrid)
      type: none
      device: $PWD/certs
      o: bind

  httpd:
    # Volume used for httpd config (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/httpd
      o: bind

  mig:
    # Volume used to contain the migrid configuration (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/mig
      o: bind

  state:
      # Volume used to contain the migrid state (provided by migrid)
      driver_opts:
        type: none
        device: $PWD/state
        o: bind
