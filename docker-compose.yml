version: '3.7'

configs:
  cull_idle_config:
    file: ./hub/cull_idle_servers.py
  append_to_notebook_config:
    file: ./hub/before-notebook.d/append_to_notebook_config.py
  create_ipython_start_configs:
    file: ./hub/before-notebook.d/create_ipython_profile_start.py
  create_r_libs_path_config:
    file: ./hub/before-notebook.d/create_r_libs_path.py
  set_jupyter_kernels_config:
    file: ./hub/before-notebook.d/set_jupyter_kernels.py
  set_python_pip_aliases_config:
    file: ./hub/before-notebook.d/set_python_pip_aliases.py
  extensions_config:
    file: ./hub/extensions/page_config.json
  update_path_env_config:
    file: ./hub/jupyter_startup_files/update_path_env.py
  r_environ_config:
    file: ./hub/R/etc/Renviron
  r_server_config:
    file: ./hub/R/conf/rserver.conf

services:
  migrid:
    image: nielsbohr/migrid:dag
    hostname: migrid
    environment:
      TZ: Europe/Copenhagen
    ports:
      - "2222:2222"
    networks:
      default:
        aliases:
          - migrid
          - migrid.test
          - io.migrid.test
          - www.migrid.test
          - oid.migrid.test
          - sid.migrid.test
    # Hack to make httpd bind to 0.0.0.0 across services
    # instead of 127.0.0.1
    extra_hosts:
      - "io.migrid.test:0.0.0.0"
      - "www.migrid.test:0.0.0.0"
      - "oid.migrid.test:0.0.0.0"
      - "sid.migrid.test:0.0.0.0"
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: bind
        source: ./dev/mock_users.csv
        target: /home/mig/mig/server/mock_users.csv
      - type: bind
        source: ./docker-entry.sh
        target: /app/docker-entry.sh
      - ./res/libnss_mig.conf:/etc/libnss_mig.conf
      - ./res/nsswitch.conf:/etc/nsswitch.conf
      - ./res/sshd:/etc/pam.d/sshd
    command: /app/docker-entry.sh -u dev@dev.dk -p Passw0rd123

  dag:
    image: nielsbohr/jupyterhub:edge
    hostname: dag
    depends_on:
      - migrid
    environment:
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
    networks:
      default:
        aliases:
          - dag
          - dag.test
    volumes:
      - ./jupyter_service_dag/hub/jupyterhub_config.py:/srv/jupyterhub/jupyter_config.py:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command: jupyterhub --debug -f /srv/jupyterhub/jupyter_config.py

  nginx-proxy:
    image: jwilder/nginx-proxy
    hostname: nginx-proxy
    depends_on:
      - migrid
      - dag
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/migrid.conf:/etc/nginx/conf.d/migrid.conf:ro
      - ./nginx-proxy/dag.conf:/etc/nginx/conf.d/dag.conf:ro
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/oid.migrid.test.crt:ro
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/sid.migrid.test.crt:ro
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/oid.migrid.test.key:ro
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/sid.migrid.test.key:ro

volumes:
  certs:
    driver_opts:
      # Volume for generated certificates (provided by migrid)
      type: none
      device: $PWD/certs
      o: bind

  httpd:
    # Volume used for httpd config (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/httpd
      o: bind

  mig:
    # Volume used to contain the migrid configuration (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/mig
      o: bind

  state:
    # Volume used to contain the migrid state (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/state
      o: bind
