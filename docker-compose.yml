version: '3.7'

services:
  migrid:
    image: nielsbohr/migrid:workflow
    hostname: migrid
    environment:
      TZ: Europe/Copenhagen
    ports:
      - "2222:2222"
    networks:
      default:
        aliases:
          - migrid
          - migrid.test
          - io.migrid.test
          - www.migrid.test
          - oid.migrid.test
          - sid.migrid.test
    # Hack to make httpd bind to 0.0.0.0 across services
    # instead of 127.0.0.1
    extra_hosts:
      - "io.migrid.test:0.0.0.0"
      - "www.migrid.test:0.0.0.0"
      - "oid.migrid.test:0.0.0.0"
      - "sid.migrid.test:0.0.0.0"
      - "migrid.test:127.0.0.1"
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: bind
        source: ./docker-entry.sh
        target: /app/docker-entry.sh
      # To support subsys_sshd in the future
      - ./res/libnss_mig.conf:/etc/libnss_mig.conf
      - ./res/nsswitch.conf:/etc/nsswitch.conf
      - ./res/sshd:/etc/pam.d/sshd
      # Mount the BASH runtime env & migrid.test.0 resource
      - ./res/BASH-ANY-1:/home/mig/state/re_home/BASH-ANY-1
      - ./res/migrid.test.0:/home/mig/state/resource_home/migrid.test.0
      - ./res/astra_samples:/home/mig/state/user_home/+C=dk+ST=dk+L=NA+O=org+OU=NA+CN=devuser+emailAddress=dev@dev.dk/astra_samples
      - ./example_notebooks:/home/mig/state/user_home/+C=dk+ST=dk+L=NA+O=org+OU=NA+CN=devuser+emailAddress=dev@dev.dk/example_notebooks
      - ./example_workflow:/home/mig/state/user_home/+C=dk+ST=dk+L=NA+O=org+OU=NA+CN=devuser+emailAddress=dev@dev.dk/example_workflow
    command: /app/docker-entry.sh -u dev@dev.dk -p Passw0rd123

  dag:
    image: nielsbohr/jupyterhub:latest
    hostname: dag
    depends_on:
      - migrid
    environment:
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
    networks:
      default:
        aliases:
          - dag
          - dag.test
    volumes:
      - ./hub/jupyterhub_dag_config.py:/srv/jupyterhub/jupyter_config.py:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command: jupyterhub --debug -f /srv/jupyterhub/jupyter_config.py

  nginx-proxy:
    image: jwilder/nginx-proxy
    hostname: nginx-proxy
    depends_on:
      - migrid
      - dag
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/migrid.conf:/etc/nginx/conf.d/migrid.conf:ro
      - ./nginx-proxy/dag.conf:/etc/nginx/conf.d/dag.conf:ro
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/oid.migrid.test.crt:ro
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/sid.migrid.test.crt:ro
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/oid.migrid.test.key:ro
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/sid.migrid.test.key:ro

volumes:
  certs:
    driver_opts:
      # Volume for generated certificates (provided by migrid)
      type: none
      device: $PWD/certs
      o: bind

  httpd:
    # Volume used for httpd config (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/httpd
      o: bind

  mig:
    # Volume used to contain the migrid configuration (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/mig
      o: bind

  state:
    # Volume used to contain the migrid state (provided by migrid)
    driver_opts:
      type: none
      device: $PWD/state
      o: bind

networks:
  default:
    attachable: True
